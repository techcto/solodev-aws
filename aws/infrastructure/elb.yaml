Description: >
    This template deploys a Classic Elastic Load Balancer

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Application Load Balancer should be deployed to

    Subnets:
        Description: Choose which subnets the Application Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    CertificateArn:
      Type: String
      Description: SSL cert for HTTPS listener that matches the FQDN
      Default: ''

Conditions:
    UseSSL: !Not [!Equals [ !Ref CertificateArn, "" ]]

Resources:

  LoadBalancerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow inbound access to the ELB
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref EnvironmentName
              - LoadBalancerSecurityGroup

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancing::LoadBalancer'
    Properties:
      CrossZone: 'true'
      ConnectionSettings:
        IdleTimeout: 120
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets: !Ref Subnets
      Listeners:
        - LoadBalancerPort: !If
                    - UseSSL
                    - 443
                    - 80
          Protocol: !If
                    - UseSSL
                    - HTTPS
                    - HTTP
          SSLCertificateId: !If
                        - UseSSL
                        - !Ref CertificateArn
                        - !Ref AWS::NoValue
          InstancePort: 80
          InstanceProtocol: HTTP
          PolicyNames:
            - !Join 
              - '-'
              - - !Ref EnvironmentName
                - StickyLoadBalancer
      HealthCheck:
        Target: !Join 
          - ''
          - - 'HTTP:'
            - 80
            - /healthcheck
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30'
        Timeout: '25'
      LBCookieStickinessPolicy:
        - PolicyName: !Join 
            - '-'
            - - !Ref EnvironmentName
              - StickyLoadBalancer
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref EnvironmentName
              - ElasticLoadBalancer

Outputs:

    LoadBalancer:
        Description: A reference to the Load Balancer
        Value: !Ref LoadBalancer

    LoadBalancerUrl: 
        Description: CNAME of Load Balancer.  Point your DNS to this CNAME.
        Value: !Join 
                - ''
                - - !If
                    - UseSSL
                    - "https://"
                    - "http://"
                  - !GetAtt LoadBalancer.DNSName
                  - "/"

    LoadBalancerSecurityGroup:
        Description: A reference to LoadBalancerSecurityGroup
        Value: !Ref LoadBalancerSecurityGroup 